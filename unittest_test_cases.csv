TEST CASE ID,SECTION,SUB-SECTION,TEST CASE TITLE,TEST DESCRIPTION,PRECONDITIONS,TEST DATA,TEST STEPS,EXPECTED RESULT,ACTUAL RESULT,STATUS
TC_01,File Loading,Positive,Verify PDF file loading,Check if the PDFLoader correctly loads a PDF file,Valid PDF file exists,self.pdf_path = 'assets/sample_pdfs/test1.pdf',Call PDFLoader(self.pdf_path).load_file(),True,True,PASS
TC_02,File Loading,Positive,Verify DOCX file loading,Check if the DOCXLoader correctly loads a DOCX file,Valid DOCX file exists,self.docx_path = 'assets/sample_docx/demo.docx',Call DOCXLoader(self.docx_path).load_file(),True,True,PASS
TC_03,File Loading,Positive,Verify PPTX file loading,Check if the PPTLoader correctly loads a PPTX file,Valid PPTX file exists,self.pptx_path = 'assets/sample_pptx/ppt_test.pptx',Call PPTLoader(self.pptx_path).load_file(),True,True,PASS
TC_04,Text Extraction,Positive,Extract text from PDF,Check if text is extracted from a PDF file,Valid PDF file exists,self.pdf_path = 'assets/sample_pdfs/test1.pdf',Call DataExtractor(PDFLoader(self.pdf_path)).extract_text(),List of extracted text,List of extracted text,PASS
TC_05,Text Extraction,Positive,Extract text from DOCX,Check if text is extracted from a DOCX file,Valid DOCX file exists,self.docx_path = 'assets/sample_docx/demo.docx',Call DataExtractor(DOCXLoader(self.docx_path)).extract_text(),List of extracted text,List of extracted text,PASS
TC_06,Text Extraction,Positive,Extract text from PPTX,Check if text is extracted from a PPTX file,Valid PPTX file exists,self.pptx_path = 'assets/sample_pptx/ppt_test.pptx',Call DataExtractor(PPTLoader(self.pptx_path)).extract_text(),List of extracted text,List of extracted text,PASS
TC_07,Links Extraction,Positive,Extract links from DOCX,Check if links are extracted from a DOCX file,Valid DOCX file with links exists,self.docx_path = 'assets/sample_docx/demo.docx',Call DataExtractor(DOCXLoader(self.docx_path)).extract_links(),List of extracted links,List of extracted links,PASS
TC_08,Images Extraction,Positive,Extract images from PDF,Check if images are extracted from a PDF file,Valid PDF file with images exists,self.pdf_path = 'assets/sample_pdfs/test1.pdf',Call DataExtractor(PDFLoader(self.pdf_path)).extract_images(),List of extracted images,List of extracted images,PASS
TC_09,Tables Extraction,Positive,Extract tables from DOCX,Check if tables are extracted from a DOCX file,Valid DOCX file with tables exists,self.docx_path = 'assets/sample_docx/demo.docx',Call DataExtractor(DOCXLoader(self.docx_path)).extract_tables(),List of extracted tables,List of extracted tables,PASS
TC_10,Storage,Positive,Store extracted data in MySQL,Check if extracted data is stored in MySQL database,Database connection available,self.pdf_path = 'assets/sample_pdfs/test1.pdf',Call SQLStorage().store(DataExtractor(PDFLoader(self.pdf_path))),Data stored successfully,Data stored successfully,PASS
TC_11,Storage,Positive,Store extracted data in a file,Check if extracted data is stored in a text file,File system write permissions,self.docx_path = 'assets/sample_docx/demo.docx',Call FileStorage().store(DataExtractor(DOCXLoader(self.docx_path))),'extracted_text.txt' file exists,'extracted_text.txt' file exists,PASS
